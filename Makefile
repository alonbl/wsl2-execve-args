WINCC = x86_64-w64-mingw32-gcc
CC = gcc

all: \
	dump-args-win.exe \
	dump-args \
	exec-args \
	spawn-win.exe

clean:
	rm -f dump-args-win.exe dump-args exec-args
	rm -f *.out

deps:
	sudo apt install gcc gcc-mingw-w64

fixup:
	sudo -- sh -c "echo -1 > /proc/sys/fs/binfmt_misc/WSLInterop; echo ":WSLInterop:M::MZ::/init:FP" > /proc/sys/fs/binfmt_misc/register"
revert:
	sudo -- sh -c "echo -1 > /proc/sys/fs/binfmt_misc/WSLInterop; echo ":WSLInterop:M::MZ::/init:F" > /proc/sys/fs/binfmt_misc/register"

dump-args: dump-args.c
	$(CC) -o dump-args dump-args.c

spawn-win.exe: spawn-win.c
	$(WINCC) -o spawn-win.exe spawn-win.c

dump-args-win.exe: dump-args.c
	$(WINCC) -o dump-args-win.exe dump-args.c

exec-args: exec-args.c
	$(CC) -o exec-args exec-args.c

check:	all
	@echo Native test misc argument
	./exec-args ./dump-args arg0 | tee dump-args.out
	@if ! grep -q "argv\[0\]='arg0'" dump-args.out; then echo FAILED; false; else echo PASS; fi
	@echo Native test program argument
	./exec-args ./dump-args ./dump-args | tee dump-args.out
	@if ! grep -q "argv\[0\]='./dump-args'" dump-args.out; then echo FAILED; false; else echo PASS; fi
	@echo Windows test misc argument
	./exec-args ./dump-args-win.exe arg0 | tee dump-args-win.out
	@if ! grep -q "argv\[0\]='arg0'" dump-args-win.out; then echo FAILED; false; else echo PASS; fi
	@echo Windows test program argument
	./exec-args ./dump-args-win.exe ./dump-args-win.exe | tee dump-args-win.out
	@if ! grep -q "argv\[0\]='./dump-args-win.exe'" dump-args-win.out; then echo FAILED; false; else echo PASS; fi

check-spawn:	all
	cp dump-args-win.exe /tmp
	./spawn-win.exe
