WINCC = x86_64-w64-mingw32-gcc
CC = gcc

all: \
	out/dump-args-win.exe \
	out/dump-args \
	out/exec-args \
	out/spawn-win.exe

clean:
	rm -f out
	rm -f *.out

deps:
	sudo apt install gcc gcc-mingw-w64

out/dump-args: dump-args.c
	mkdir -p out
	$(CC) -o out/dump-args dump-args.c

out/spawn-win.exe: spawn-win.c
	mkdir -p out
	$(WINCC) -o out/spawn-win.exe spawn-win.c

out/dump-args-win.exe: dump-args.c
	mkdir -p out
	$(WINCC) -o out/dump-args-win.exe dump-args.c

out/exec-args: exec-args.c
	$(CC) -o out/exec-args exec-args.c

check:	all
	@echo Native test misc argument
	./out/exec-args ./out/dump-args arg0 | tee dump-args.out
	@if ! grep -q "argv\[0\]='arg0'" dump-args.out; then echo FAILED; false; else echo PASS; fi
	@echo Native test program argument
	./out/exec-args ./out/dump-args ./out/dump-args | tee dump-args.out
	@if ! grep -q "argv\[0\]='./out/dump-args'" dump-args.out; then echo FAILED; false; else echo PASS; fi
	@echo Windows test misc argument
	./out/exec-args ./out/dump-args-win.exe arg0 | tee dump-args-win.out
	@if ! grep -q "argv\[0\]='arg0'" dump-args-win.out; then echo FAILED; false; else echo PASS; fi
	@echo Windows test program argument
	./out/exec-args ./out/dump-args-win.exe ./out/dump-args-win.exe | tee dump-args-win.out
	@if ! grep -q "argv\[0\]='./out/dump-args-win.exe'" dump-args-win.out; then echo FAILED; false; else echo PASS; fi

check-spawn:	all
	cp out/dump-args-win.exe /tmp
	./spawn-win.exe
